{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Index","props","useState","navItemActive","setNavItemActive","useIsInViewport","threshold","isAboutInViewport","aboutTargetRef","isExperienceInViewport","experienceTargetRef","isBlogInViewport","blogTargetRef","isHeroInViewport","heroTargetRef","aboutRef","useRef","experienceRef","blogRef","useEffect","console","log","className","title","scrollToAbout","current","scrollIntoView","behavior","scrollToExperience","scrollToBlog","showAbout","showExperience","showBlog","aboutNav","experienceNav","blogNav","heroNav","contentData","content","heroBanner","data","navRef","aboutMe","scrollRef","thingsIBuild","otherProjects","allMarkdownRemark","edges"],"mappings":"2FAAA,4GAiBe,SAASA,EAAMC,GAAQ,IAAD,EACOC,mBAAS,QAA5CC,EAD4B,KACbC,EADa,OAGSC,YAAgB,CAC1DC,UAAW,KADNC,EAH4B,KAGTC,EAHS,OAOmBH,YAAgB,CACpEC,UAAW,KADNG,EAP4B,KAOJC,EAPI,OAWOL,YAAgB,CACxDC,UAAW,KADNK,EAX4B,KAWVC,EAXU,OAeOP,YAAgB,CACxDC,UAAW,KADNO,EAf4B,KAeVC,EAfU,KAmB7BC,EAAWC,iBAAO,MAClBC,EAAgBD,iBAAO,MACvBE,EAAUF,iBAAO,MAyCvB,OArBAG,qBAAU,WACJN,EACFT,EAAiB,QACRG,EACTH,EAAiB,SACRK,EACTL,EAAiB,cACRO,GACTP,EAAiB,UAElB,CACDG,EACAI,EACAF,EACAI,IAGFM,qBAAU,WACRC,QAAQC,IAAI,0BAA2BlB,KACtC,CAACA,IAGF,yBAAKmB,UAAU,mBACb,kBAAC,IAAD,CAAKC,MAAM,SACX,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,yBAAKD,UAAU,YACb,kBAAC,IAAD,CACEE,cA/Cc,WAChBT,EAASU,SACXV,EAASU,QAAQC,eAAe,CAAEC,SAAU,YA8CxCC,mBA1CmB,WACrBX,EAAcQ,SAChBR,EAAcQ,QAAQC,eAAe,CAAEC,SAAU,YAyC7CE,aArCa,WACfX,EAAQO,SACVP,EAAQO,QAAQC,eAAe,CAAEC,SAAU,YAoCvCG,YAAWf,EAASU,QACpBM,iBAAgBd,EAAcQ,QAC9BO,WAAUd,EAAQO,QAClBQ,SAA4B,UAAlB9B,EACV+B,cAAiC,eAAlB/B,EACfgC,QAA2B,SAAlBhC,EACTiC,QAA2B,SAAlBjC,IAEX,kBAAC,IAAD,CACEkC,YAAaC,IAAQC,WAAWC,KAChCC,OAAQ3B,IAEV,kBAAC,IAAD,CACEuB,YAAaC,IAAQI,QAAQF,KAC7BC,OAAQjC,EACRmC,UAAW5B,IAEb,kBAAC,IAAD,CACEsB,YAAaC,IAAQM,aAAaJ,KAClCC,OAAQ/B,EACRiC,UAAW1B,IAEb,kBAAC,IAAD,CAAeoB,YAAaC,IAAQO,cAAcL,OAClD,kBAAC,IAAD,CACEH,YAAapC,EAAMuC,KAAKM,kBAAkBC,MAC1CN,OAAQ7B,EACR+B,UAAWzB,IAEb,kBAAC,IAAD","file":"component---src-pages-index-js-57060a67b686e6142d85.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  HeroBanner,\n  NavBar,\n  AboutMe,\n  ThingsIBuild,\n  OtherProjects,\n  SideGadgetLeft,\n  SideGadgetRigth,\n  MobileGadget,\n  CheckMyBlog,\n  Footer,\n  content,\n} from \"./../components\";\nimport useIsInViewport from \"use-is-in-viewport\";\nimport SEO from \"../components/seo\";\n\nexport default function Index(props) {\n  const [navItemActive, setNavItemActive] = useState(\"none\");\n\n  const [isAboutInViewport, aboutTargetRef] = useIsInViewport({\n    threshold: 20,\n  });\n\n  const [isExperienceInViewport, experienceTargetRef] = useIsInViewport({\n    threshold: 10,\n  });\n\n  const [isBlogInViewport, blogTargetRef] = useIsInViewport({\n    threshold: 10,\n  });\n\n  const [isHeroInViewport, heroTargetRef] = useIsInViewport({\n    threshold: 10,\n  });\n\n  const aboutRef = useRef(null);\n  const experienceRef = useRef(null);\n  const blogRef = useRef(null);\n\n  const scrollToAbout = () => {\n    if (aboutRef.current) {\n      aboutRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  const scrollToExperience = () => {\n    if (experienceRef.current) {\n      experienceRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  const scrollToBlog = () => {\n    if (blogRef.current) {\n      blogRef.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  useEffect(() => {\n    if (isHeroInViewport) {\n      setNavItemActive(\"hero\");\n    } else if (isAboutInViewport) {\n      setNavItemActive(\"about\");\n    } else if (isExperienceInViewport) {\n      setNavItemActive(\"experience\");\n    } else if (isBlogInViewport) {\n      setNavItemActive(\"blog\");\n    }\n  }, [\n    isAboutInViewport,\n    isBlogInViewport,\n    isExperienceInViewport,\n    isHeroInViewport,\n  ]);\n\n  useEffect(() => {\n    console.log(\"Item active on nav is: \", navItemActive);\n  }, [navItemActive]);\n\n  return (\n    <div className=\"blackBackground\">\n      <SEO title=\"Home\" />\n      <MobileGadget />\n      <SideGadgetLeft />\n      <SideGadgetRigth />\n      <div className=\"bx--grid\">\n        <NavBar\n          scrollToAbout={scrollToAbout}\n          scrollToExperience={scrollToExperience}\n          scrollToBlog={scrollToBlog}\n          showAbout={aboutRef.current ? true : false}\n          showExperience={experienceRef.current ? true : false}\n          showBlog={blogRef.current ? true : false}\n          aboutNav={navItemActive === \"about\"}\n          experienceNav={navItemActive === \"experience\"}\n          blogNav={navItemActive === \"blog\"}\n          heroNav={navItemActive === \"hero\"}\n        />\n        <HeroBanner\n          contentData={content.heroBanner.data}\n          navRef={heroTargetRef}\n        />\n        <AboutMe\n          contentData={content.aboutMe.data}\n          navRef={aboutTargetRef}\n          scrollRef={aboutRef}\n        />\n        <ThingsIBuild\n          contentData={content.thingsIBuild.data}\n          navRef={experienceTargetRef}\n          scrollRef={experienceRef}\n        />\n        <OtherProjects contentData={content.otherProjects.data} />\n        <CheckMyBlog\n          contentData={props.data.allMarkdownRemark.edges}\n          navRef={blogTargetRef}\n          scrollRef={blogRef}\n        />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 3\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            description\n            title\n            date\n            slug\n            thumbnail {\n              childImageSharp {\n                fluid {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}