{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/bio.js","webpack:///./src/components/layout.js"],"names":["blogIndexLayoutGrid","sm","col","md","offset","lg","xlg","max","BlogIndex","data","location","allMarkdownRemark","nodes","length","className","title","gridPlacement","Bio","useStaticQuery","author","site","siteMetadata","social","avatar","childImageSharp","fixed","alt","name","imgStyle","borderRadius","summary","href","twitter","Layout","header","children","isRootPath","pathname","to","data-is-root-path","Date","getFullYear"],"mappings":"6FAAA,oHAUMA,EAAsB,CAC1BC,GAAI,CACFC,IAAK,OAEPC,GAAI,CACFC,OAAQ,IACRF,IAAK,KAEPG,GAAI,CACFD,OAAQ,KAEVE,IAAK,CACHF,OAAQ,KAEVG,IAAK,CACHH,OAAQ,IACRF,IAAK,OAuDMM,UAjCG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAqB,EAAfC,SAGzB,OAAqB,IAFPD,EAAKE,kBAAkBC,MAE3BC,OAEN,yBAAKC,UAAU,QACb,kBAAC,IAAD,CAAKC,MAAM,cACX,kBAAC,IAAD,MACA,yLAUJ,yBAAKD,UAAU,QACb,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKC,MAAM,cACX,yBAAKD,UAAU,gCACb,yBAAKA,UAAU,WACb,yBAAKA,UAAWE,YAAchB,EAAqB,kBACjD,yBAAKc,UAAU,4BAGnB,kBAAC,IAAD,U,oCC3ER,0DAkEeG,IAvDH,WAAO,IAAD,QACVR,EAAOS,yBAAe,aAwBtBC,EAAM,UAAGV,EAAKW,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGb,EAAKW,KAAKC,oBAAb,aAAG,EAAwBC,OAEjCC,EAASd,SAAH,UAAGA,EAAMc,cAAT,iBAAG,EAAcC,uBAAjB,aAAG,EAA+BC,MAE9C,OACE,yBAAKX,UAAU,OACZS,GACC,kBAAC,IAAD,CACEE,MAAOF,EACPG,KAAKP,aAAA,EAAAA,EAAQQ,OAAR,GACLb,UAAU,aACVc,SAAU,CACRC,aAAa,UAIlBV,aAAA,EAAAA,EAAQQ,OACP,yCACa,gCAASR,EAAOQ,MAD7B,KAC6CR,aAAA,EAAAA,EAAQW,UAAW,KADhE,IAGE,uBAAGC,KAAI,yBAAyBT,aAAA,EAAAA,EAAQU,UAAR,KAAhC,yC,kCCzDV,qCAmCeC,IAhCA,SAAC,GAAmC,IAG7CC,EAHYxB,EAAgC,EAAhCA,SAAUK,EAAsB,EAAtBA,MAAOoB,EAAe,EAAfA,SAE3BC,EADQ,MACK1B,EAAS2B,SAiB5B,OAbEH,EADEE,EAEA,wBAAItB,UAAU,gBACZ,kBAAC,OAAD,CAAMwB,GAAG,KAAKvB,IAKhB,kBAAC,OAAD,CAAMD,UAAU,mBAAmBwB,GAAG,KACnCvB,GAML,yBAAKD,UAAU,iBAAiByB,oBAAmBH,GACjD,4BAAQtB,UAAU,iBAAiBoB,GACnC,8BAAOC,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGV,KAAK,4BAAR","file":"component---src-pages-about-js-a93ae0788bc162b43c14.js","sourcesContent":["import React from \"react\";\nimport { graphql, navigate } from \"gatsby\";\nimport { gridPlacement } from \"../components/utilities\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport BlogHeader from \"../components/BlogHeader\";\nimport BlogFooter from \"../components/BlogFooter\";\n\nconst blogIndexLayoutGrid = {\n  sm: {\n    col: \"col\",\n  },\n  md: {\n    offset: \"1\",\n    col: \"6\",\n  },\n  lg: {\n    offset: \"2\",\n  },\n  xlg: {\n    offset: \"2\",\n  },\n  max: {\n    offset: \"3\",\n    col: \"11\",\n  },\n};\n\nconst blogIndexCardGrid = {\n  sm: {\n    col: \"4\",\n  },\n  md: {\n    col: \"4\",\n  },\n  lg: {\n    col: \"4\",\n  },\n  xlg: {\n    col: \"4\",\n  },\n  max: {\n    col: \"3\",\n  },\n};\n\nconst BlogIndex = ({ data, location }) => {\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <div className=\"blog\">\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"blog\">\n      <BlogHeader />\n      <SEO title=\"All posts\" />\n      <div className=\"bx--grid bx--grid--condensed\">\n        <div className=\"box-row\">\n          <div className={gridPlacement(blogIndexLayoutGrid, \"bx--no-gutter\")}>\n            <div className=\"bx--row bx--no-gutter\"></div>\n          </div>\n        </div>\n        <BlogFooter />\n      </div>\n    </div>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      nodes {\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          path\n          thumbnail {\n            publicURL\n          }\n          slug\n        }\n      }\n    }\n  }\n`;\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  const avatar = data?.avatar?.childImageSharp?.fixed\n\n  return (\n    <div className=\"bio\">\n      {avatar && (\n        <Image\n          fixed={avatar}\n          alt={author?.name || ``}\n          className=\"bio-avatar\"\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n      )}\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}