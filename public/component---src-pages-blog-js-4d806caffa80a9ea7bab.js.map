{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/layout.js","webpack:///./src/pages/blog.js"],"names":["Bio","data","useStaticQuery","author","site","siteMetadata","social","avatar","childImageSharp","fixed","className","alt","name","imgStyle","borderRadius","summary","href","twitter","Layout","header","location","title","children","isRootPath","pathname","to","data-is-root-path","Date","getFullYear","blogIndexLayoutGrid","sm","col","md","offset","lg","xlg","max","blogIndexCardGrid","BlogIndex","posts","allMarkdownRemark","nodes","length","gridPlacement","map","post","i","frontmatter","console","log","onClick","navigate","slug","fluid","thumbnail","date","description"],"mappings":"6FAAA,0DAkEeA,IAvDH,WAAO,IAAD,QACVC,EAAOC,yBAAe,aAwBtBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAM,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,OAEjCC,EAASN,SAAH,UAAGA,EAAMM,cAAT,iBAAG,EAAcC,uBAAjB,aAAG,EAA+BC,MAE9C,OACE,yBAAKC,UAAU,OACZH,GACC,kBAAC,IAAD,CACEE,MAAOF,EACPI,KAAKR,aAAA,EAAAA,EAAQS,OAAR,GACLF,UAAU,aACVG,SAAU,CACRC,aAAa,UAIlBX,aAAA,EAAAA,EAAQS,OACP,yCACa,gCAAST,EAAOS,MAD7B,KAC6CT,aAAA,EAAAA,EAAQY,UAAW,KADhE,IAGE,uBAAGC,KAAI,yBAAyBV,aAAA,EAAAA,EAAQW,UAAR,KAAhC,yC,kCCzDV,qCAmCeC,IAhCA,SAAC,GAAmC,IAG7CC,EAHYC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAE3BC,EADQ,MACKH,EAASI,SAiB5B,OAbEL,EADEI,EAEA,wBAAIb,UAAU,gBACZ,kBAAC,OAAD,CAAMe,GAAG,KAAKJ,IAKhB,kBAAC,OAAD,CAAMX,UAAU,mBAAmBe,GAAG,KACnCJ,GAML,yBAAKX,UAAU,iBAAiBgB,oBAAmBH,GACjD,4BAAQb,UAAU,iBAAiBS,GACnC,8BAAOG,GACP,sCACK,IAAIK,MAAOC,cADhB,mBAGE,uBAAGZ,KAAK,4BAAR,c,kCC7BR,yIAWMa,EAAsB,CAC1BC,GAAI,CACFC,IAAK,KAEPC,GAAI,CACFC,OAAQ,IACRF,IAAK,KAEPG,GAAI,CACFD,OAAQ,IACRF,IAAK,MAEPI,IAAK,CACHF,OAAQ,IACRF,IAAK,MAEPK,IAAK,CACHH,OAAQ,IACRF,IAAK,OAIHM,EAAoB,CACxBP,GAAI,CACFC,IAAK,KAEPC,GAAI,CACFD,IAAK,KAEPG,GAAI,CACFH,IAAK,KAEPI,IAAK,CACHJ,IAAK,KAEPK,IAAK,CACHL,IAAK,MAkEMO,UA9DG,SAAC,GAAwB,IAAtBrC,EAAqB,EAArBA,KACbsC,GADkC,EAAfnB,SACXnB,EAAKuC,kBAAkBC,OAErC,OAAqB,IAAjBF,EAAMG,OAEN,yBAAKhC,UAAU,QACb,kBAAC,IAAD,CAAKW,MAAM,SACX,kBAAC,IAAD,MACA,yLAUJ,yBAAKX,UAAU,QACb,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKW,MAAM,SACX,yBAAKX,UAAU,gCACb,yBAAKA,UAAU,WACb,yBAAKA,UAAWiC,YAAcd,EAAqB,kBACjD,yBAAKnB,UAAU,mCACZ6B,EAAMK,KAAI,SAACC,EAAMC,GAChB,IAAMzB,EAAQwB,EAAKE,YAAY1B,MAG/B,OAFA2B,QAAQC,IAAIJ,GAGV,yBACEnC,UAAWiC,YACTN,EACA,+BAEFa,QAAS,WACPC,mBAASN,EAAKE,YAAYK,QAG5B,kBAAC,IAAD,CACE1C,UAAU,qBACV2C,MAAOR,EAAKE,YAAYO,UAAU9C,gBAAgB6C,QAEpD,wBAAI3C,UAAU,sBAAsBW,GACpC,2BAAOX,UAAU,qBACdmC,EAAKE,YAAYQ,MAEpB,uBAAG7C,UAAU,qBACVmC,EAAKE,YAAYS,oBAQhC,kBAAC,IAAD","file":"component---src-pages-blog-js-4d806caffa80a9ea7bab.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50, quality: 95) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  const avatar = data?.avatar?.childImageSharp?.fixed\n\n  return (\n    <div className=\"bio\">\n      {avatar && (\n        <Image\n          fixed={avatar}\n          alt={author?.name || ``}\n          className=\"bio-avatar\"\n          imgStyle={{\n            borderRadius: `50%`,\n          }}\n        />\n      )}\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","import React from \"react\";\nimport { graphql, navigate } from \"gatsby\";\nimport { gridPlacement } from \"../components/utilities\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport BlogHeader from \"../components/BlogHeader\";\nimport BlogFooter from \"../components/BlogFooter\";\nimport Img from \"gatsby-image\";\n\nconst blogIndexLayoutGrid = {\n  sm: {\n    col: \"4\",\n  },\n  md: {\n    offset: \"1\",\n    col: \"6\",\n  },\n  lg: {\n    offset: \"2\",\n    col: \"12\",\n  },\n  xlg: {\n    offset: \"2\",\n    col: \"12\",\n  },\n  max: {\n    offset: \"3\",\n    col: \"10\",\n  },\n};\n\nconst blogIndexCardGrid = {\n  sm: {\n    col: \"4\",\n  },\n  md: {\n    col: \"4\",\n  },\n  lg: {\n    col: \"8\",\n  },\n  xlg: {\n    col: \"4\",\n  },\n  max: {\n    col: \"4\",\n  },\n};\n\nconst BlogIndex = ({ data, location }) => {\n  const posts = data.allMarkdownRemark.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <div className=\"blog\">\n        <SEO title=\"Blog\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"blog\">\n      <BlogHeader />\n      <SEO title=\"Blog\" />\n      <div className=\"bx--grid bx--grid--condensed\">\n        <div className=\"box-row\">\n          <div className={gridPlacement(blogIndexLayoutGrid, \"bx--no-gutter\")}>\n            <div className=\"blogIndex bx--row bx--no-gutter\">\n              {posts.map((post, i) => {\n                const title = post.frontmatter.title;\n                console.log(post);\n\n                return (\n                  <div\n                    className={gridPlacement(\n                      blogIndexCardGrid,\n                      \"blogIndexCard bx--no-gutter\"\n                    )}\n                    onClick={() => {\n                      navigate(post.frontmatter.slug);\n                    }}\n                  >\n                    <Img\n                      className=\"blogIndexCardImage\"\n                      fluid={post.frontmatter.thumbnail.childImageSharp.fluid}\n                    />\n                    <h2 className=\"blogIndexCardTitle\">{title}</h2>\n                    <small className=\"blogIndexCardDate\">\n                      {post.frontmatter.date}\n                    </small>\n                    <p className=\"blogIndexCardBody\">\n                      {post.frontmatter.description}\n                    </p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n        <BlogFooter />\n      </div>\n    </div>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      nodes {\n        frontmatter {\n          title\n          date(formatString: \"MMMM DD, YYYY\")\n          description\n          path\n          thumbnail {\n            childImageSharp {\n              fluid {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}